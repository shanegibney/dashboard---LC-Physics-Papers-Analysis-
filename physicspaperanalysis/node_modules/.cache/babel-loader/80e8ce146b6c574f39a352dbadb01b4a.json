{"remainingRequest":"/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/node_modules/babel-loader/lib/index.js!/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/src/components/List.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/src/components/List.vue","mtime":1564615053758},{"path":"/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  name: 'List',\n  data: function data() {\n    var _ref;\n\n    return _ref = {\n      drinks: [{\n        label: \"Beer\",\n        options: [\"Sam Adams\", \"Anchor Steam\", \"St. Arnold\"]\n      }, {\n        label: \"Soda\",\n        options: [\"Pepsi\", \"Coke\", \"RC\"]\n      }, {\n        label: \"Coffee\",\n        options: [\"Starbucks\", \"Dunkin Donuts\", \"Gross Hotel Room\"]\n      }],\n      selectLevels: ['Higher', 'Ordinary'],\n      selected: 'Higher',\n      // options: [\"Higher\", \"Ordinary\"],\n      selectedDrink: 0,\n      selectedOption: '',\n      opts: [{\n        level: 'Higher'\n      }, {\n        level: 'Ordinary'\n      }],\n      questionopts: [{\n        type: 'Theory'\n      }, {\n        type: 'Substitution'\n      }, {\n        type: 'Historic'\n      }, {\n        type: 'Experiment'\n      }, {\n        type: 'Definition'\n      }]\n    }, _defineProperty(_ref, \"selected\", ''), _defineProperty(_ref, \"todos\", []), _defineProperty(_ref, \"id\", ''), _defineProperty(_ref, \"Yeartag\", 2015), _defineProperty(_ref, \"Leveltag\", 'Higher'), _defineProperty(_ref, \"Questiontag\", 'Question about the thing....'), _defineProperty(_ref, \"Answertag\", 'Answer is 42!'), _defineProperty(_ref, \"Topictag\", 'Mechanics'), _defineProperty(_ref, \"Sub_topictag\", 'Friction'), _defineProperty(_ref, \"Question_typetag\", 'Theory'), _defineProperty(_ref, \"Markstag\", 5), _defineProperty(_ref, \"Question_numbertag\", 2), _defineProperty(_ref, \"Parttag\", 'c'), _defineProperty(_ref, \"Sub_parttag\", 'ii'), _defineProperty(_ref, \"isEdit\", false), _ref;\n  },\n  mounted: function mounted() {\n    this.getTasks(); //this.sortDynamicDropDownMenu()\n  },\n  methods: {\n    selectDrink: function selectDrink() {\n      this.selectedOption = '';\n    },\n    sortDynamicDropDownMenu: function sortDynamicDropDownMenu() {\n      //console.log(\"qwertyui\")\n      // console.log(\"hello we are result.data - this.todos[0].task_tag; \" + this.todos[0].task_tag )\n      for (var i = 0; i < this.todos.length; i++) {// console.log(this.todos[i].task_tag);\n      }\n    },\n    // lastTask() {\n    //   axios.get(\"/api/lastTask\").then(\n    //     result => {\n    //       // this.todos = result.data\n    //       console.log(result.data);\n    //     },\n    //     error => {\n    //       console.error(error)\n    //     }\n    //   )\n    // },\n    getTasks: function getTasks() {\n      var _this = this;\n\n      axios.get(\"/api/tasks\").then(function (result) {\n        console.log(result.data);\n        _this.todos = result.data;\n      }, function (error) {\n        console.error(error);\n      });\n    },\n    addNewTask: function addNewTask() {\n      var _this2 = this;\n\n      console.log(\"this.Questiontag: \" + this.Questiontag);\n      axios.post(\"/api/task\", {\n        Level: this.Leveltag,\n        Year: this.Yeartag,\n        Question: this.Questiontag,\n        Answer: this.Answertag,\n        Topic: this.Topictag,\n        Sub_topic: this.Sub_topictag,\n        Question_type: this.Question_typetag,\n        Marks: this.Markstag,\n        Question_number: this.Question_numbertag,\n        Part: this.Parttag,\n        Sub_part: this.Sub_parttag\n      }).then(function (res) {\n        // this.Leveltag = 'Higher'\n        _this2.Yeartag = 2017; //this are always different and so should be cleared\n\n        _this2.Questiontag = '';\n        _this2.Answertag = '';\n        _this2.Topictag = 'Nuclear Physics';\n        _this2.Sub_parttag = 'Radioactivity';\n        _this2.Question_typetag = 'Theory';\n        _this2.Markstag = 2;\n        _this2.Question_numbertag = 8;\n        _this2.Parttag = 'vi';\n        _this2.Sub_part = '';\n\n        _this2.getTasks();\n      }).catch(function (err) {\n        console.log(error);\n      });\n    },\n    editTask: function editTask(id, edit_Level, edit_Year, edit_Question, edit_Answer, edit_Topic, edit_Sub_topic, edit_Question_type, edit_Marks, edit_Question_number, edit_Part, edit_Sub_part) {\n      this.id = id;\n      this.Leveltag = edit_Level;\n      this.Yeartag = edit_Year;\n      this.Questiontag = edit_Question;\n      this.Answertag = edit_Answer;\n      this.Topictag = edit_Topic;\n      this.Sub_parttag = edit_Sub_topic;\n      this.Question_typetag = edit_Question_type;\n      this.Markstag = edit_Marks;\n      this.Question_numbertag = edit_Question_number;\n      this.Parttag = edit_Part;\n      this.Sub_parttag = edit_Sub_part;\n      this.isEdit = true;\n    },\n    updateTask: function updateTask(id) {\n      var _axios$put,\n          _this3 = this;\n\n      // axios.put(`/api/task/${this.id}`, {\n      axios.put('/api/task/' + id, (_axios$put = {\n        Level: this.Leveltag,\n        Year: this.Yeartag,\n        Question_number: this.Question_numbertag,\n        Part: this.Parttag,\n        Sub_part: this.Sub_parttag,\n        Question: this.Questiontag,\n        Answer: this.Answertag,\n        Topic: this.Topictag\n      }, _defineProperty(_axios$put, \"Sub_part\", this.Sub_parttag), _defineProperty(_axios$put, \"Question_type\", this.Question_typetag), _defineProperty(_axios$put, \"Marks\", this.Markstag), _axios$put)).then(function (res) {\n        _this3.Leveltag = 'Higher';\n        _this3.Yeartag = 2010;\n        _this3.Question_numbertag = 3;\n        _this3.Parttag = 'b';\n        _this3.Sub_parttag = 'i';\n        _this3.Questiontag = 'quest...';\n        _this3.Answertag = 'ans:...';\n        _this3.Topictag = 'Heat';\n        _this3.Sub_topictag = 'Specific heat capacity';\n        _this3.Question_typetag = 'Substitution';\n        _this3.Markstag = 4;\n        _this3.isEdit = false;\n\n        _this3.getTasks();\n\n        console.log(res);\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    deleteTask: function deleteTask(id) {\n      var _this4 = this;\n\n      // axios.delete('/api/task/${id}')\n      axios.delete('/api/task/' + id).then(function (res) {\n        console.log(\"delete id: \" + id);\n        _this4.Leveltag = '';\n\n        _this4.getTasks();\n\n        console.log(\"The delete task...\");\n        console.log(res);\n        console.log(\"....\");\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  },\n  computed: {\n    reversedTodos: function reversedTodos() {\n      return this.todos.slice().reverse();\n    }\n  }\n};",{"version":3,"sources":["List.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyIA,OAAA,KAAA,MAAA,OAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,IAFA,kBAEA;AAAA;;AACA;AACA,MAAA,MAAA,EAAA,CAAA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,OAAA,EAAA,CAAA,WAAA,EAAA,cAAA,EAAA,YAAA;AAFA,OAAA,EAIA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,OAAA,EAAA,CAAA,OAAA,EAAA,MAAA,EAAA,IAAA;AAFA,OAJA,EAQA;AACA,QAAA,KAAA,EAAA,QADA;AAEA,QAAA,OAAA,EAAA,CAAA,WAAA,EAAA,eAAA,EAAA,kBAAA;AAFA,OARA,CADA;AAcA,MAAA,YAAA,EAAA,CAAA,QAAA,EAAA,UAAA,CAdA;AAeA,MAAA,QAAA,EAAA,QAfA;AAgBA;AACA,MAAA,aAAA,EAAA,CAjBA;AAkBA,MAAA,cAAA,EAAA,EAlBA;AAmBA,MAAA,IAAA,EAAA,CAAA;AACA,QAAA,KAAA,EAAA;AADA,OAAA,EAEA;AACA,QAAA,KAAA,EAAA;AADA,OAFA,CAnBA;AAwBA,MAAA,YAAA,EAAA,CAAA;AACA,QAAA,IAAA,EAAA;AADA,OAAA,EAEA;AACA,QAAA,IAAA,EAAA;AADA,OAFA,EAIA;AACA,QAAA,IAAA,EAAA;AADA,OAJA,EAMA;AACA,QAAA,IAAA,EAAA;AADA,OANA,EAQA;AACA,QAAA,IAAA,EAAA;AADA,OARA;AAxBA,yCAmCA,EAnCA,kCAoCA,EApCA,+BAqCA,EArCA,oCAsCA,IAtCA,qCAuCA,QAvCA,wCAwCA,8BAxCA,sCAyCA,eAzCA,qCA0CA,WA1CA,yCA2CA,UA3CA,6CA4CA,QA5CA,qCA6CA,CA7CA,+CA8CA,CA9CA,oCA+CA,GA/CA,wCAgDA,IAhDA,mCAiDA,KAjDA;AAmDA,GAtDA;AAuDA,EAAA,OAvDA,qBAuDA;AACA,SAAA,QAAA,GADA,CAEA;AACA,GA1DA;AA2DA,EAAA,OAAA,EAAA;AACA,IAAA,WAAA,EAAA,uBAAA;AACA,WAAA,cAAA,GAAA,EAAA;AACA,KAHA;AAIA,IAAA,uBAJA,qCAIA;AACA;AACA;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,KAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA,CACA;AACA;AACA,KAVA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAA,QAtBA,sBAsBA;AAAA;;AACA,MAAA,KAAA,CAAA,GAAA,CAAA,YAAA,EAAA,IAAA,CACA,UAAA,MAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,MAAA,CAAA,IAAA;AACA,QAAA,KAAA,CAAA,KAAA,GAAA,MAAA,CAAA,IAAA;AACA,OAJA,EAKA,UAAA,KAAA,EAAA;AACA,QAAA,OAAA,CAAA,KAAA,CAAA,KAAA;AACA,OAPA;AASA,KAhCA;AAiCA,IAAA,UAjCA,wBAiCA;AAAA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,uBAAA,KAAA,WAAA;AACA,MAAA,KAAA,CAAA,IAAA,CAAA,WAAA,EAAA;AACA,QAAA,KAAA,EAAA,KAAA,QADA;AAEA,QAAA,IAAA,EAAA,KAAA,OAFA;AAGA,QAAA,QAAA,EAAA,KAAA,WAHA;AAIA,QAAA,MAAA,EAAA,KAAA,SAJA;AAKA,QAAA,KAAA,EAAA,KAAA,QALA;AAMA,QAAA,SAAA,EAAA,KAAA,YANA;AAOA,QAAA,aAAA,EAAA,KAAA,gBAPA;AAQA,QAAA,KAAA,EAAA,KAAA,QARA;AASA,QAAA,eAAA,EAAA,KAAA,kBATA;AAUA,QAAA,IAAA,EAAA,KAAA,OAVA;AAWA,QAAA,QAAA,EAAA,KAAA;AAXA,OAAA,EAaA,IAbA,CAaA,UAAA,GAAA,EAAA;AACA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,IAAA,CAFA,CAGA;;AACA,QAAA,MAAA,CAAA,WAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,SAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,QAAA,GAAA,iBAAA;AACA,QAAA,MAAA,CAAA,WAAA,GAAA,eAAA;AACA,QAAA,MAAA,CAAA,gBAAA,GAAA,QAAA;AACA,QAAA,MAAA,CAAA,QAAA,GAAA,CAAA;AACA,QAAA,MAAA,CAAA,kBAAA,GAAA,CAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,IAAA;AACA,QAAA,MAAA,CAAA,QAAA,GAAA,EAAA;;AACA,QAAA,MAAA,CAAA,QAAA;AACA,OA3BA,EA2BA,KA3BA,CA2BA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,OA7BA;AA8BA,KAjEA;AAkEA,IAAA,QAlEA,oBAkEA,EAlEA,EAkEA,UAlEA,EAkEA,SAlEA,EAkEA,aAlEA,EAkEA,WAlEA,EAkEA,UAlEA,EAkEA,cAlEA,EAkEA,kBAlEA,EAkEA,UAlEA,EAkEA,oBAlEA,EAkEA,SAlEA,EAkEA,aAlEA,EAkEA;AACA,WAAA,EAAA,GAAA,EAAA;AACA,WAAA,QAAA,GAAA,UAAA;AACA,WAAA,OAAA,GAAA,SAAA;AACA,WAAA,WAAA,GAAA,aAAA;AACA,WAAA,SAAA,GAAA,WAAA;AACA,WAAA,QAAA,GAAA,UAAA;AACA,WAAA,WAAA,GAAA,cAAA;AACA,WAAA,gBAAA,GAAA,kBAAA;AACA,WAAA,QAAA,GAAA,UAAA;AACA,WAAA,kBAAA,GAAA,oBAAA;AACA,WAAA,OAAA,GAAA,SAAA;AACA,WAAA,WAAA,GAAA,aAAA;AACA,WAAA,MAAA,GAAA,IAAA;AACA,KAhFA;AAiFA,IAAA,UAjFA,sBAiFA,EAjFA,EAiFA;AAAA;AAAA;;AACA;AACA,MAAA,KAAA,CAAA,GAAA,CAAA,eAAA,EAAA;AACA,QAAA,KAAA,EAAA,KAAA,QADA;AAEA,QAAA,IAAA,EAAA,KAAA,OAFA;AAGA,QAAA,eAAA,EAAA,KAAA,kBAHA;AAIA,QAAA,IAAA,EAAA,KAAA,OAJA;AAKA,QAAA,QAAA,EAAA,KAAA,WALA;AAMA,QAAA,QAAA,EAAA,KAAA,WANA;AAOA,QAAA,MAAA,EAAA,KAAA,SAPA;AAQA,QAAA,KAAA,EAAA,KAAA;AARA,iDASA,KAAA,WATA,gDAUA,KAAA,gBAVA,wCAWA,KAAA,QAXA,gBAaA,IAbA,CAaA,UAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,QAAA,GAAA,QAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,IAAA;AACA,QAAA,MAAA,CAAA,kBAAA,GAAA,CAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,GAAA;AACA,QAAA,MAAA,CAAA,WAAA,GAAA,GAAA;AACA,QAAA,MAAA,CAAA,WAAA,GAAA,UAAA;AACA,QAAA,MAAA,CAAA,SAAA,GAAA,SAAA;AACA,QAAA,MAAA,CAAA,QAAA,GAAA,MAAA;AACA,QAAA,MAAA,CAAA,YAAA,GAAA,wBAAA;AACA,QAAA,MAAA,CAAA,gBAAA,GAAA,cAAA;AACA,QAAA,MAAA,CAAA,QAAA,GAAA,CAAA;AACA,QAAA,MAAA,CAAA,MAAA,GAAA,KAAA;;AACA,QAAA,MAAA,CAAA,QAAA;;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,OA5BA,EA6BA,KA7BA,CA6BA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,OA/BA;AAgCA,KAnHA;AAoHA,IAAA,UApHA,sBAoHA,EApHA,EAoHA;AAAA;;AACA;AACA,MAAA,KAAA,CAAA,MAAA,CAAA,eAAA,EAAA,EACA,IADA,CACA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,gBAAA,EAAA;AACA,QAAA,MAAA,CAAA,QAAA,GAAA,EAAA;;AACA,QAAA,MAAA,CAAA,QAAA;;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,oBAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,MAAA;AACA,OARA,EASA,KATA,CASA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,OAXA;AAYA;AAlIA,GA3DA;AA+LA,EAAA,QAAA,EAAA;AACA,IAAA,aADA,2BACA;AACA,aAAA,KAAA,KAAA,CAAA,KAAA,GAAA,OAAA,EAAA;AACA;AAHA;AA/LA,CAAA","sourcesContent":["<template>\n<div class=\"hello\">\n  <div id=\"todo-list-example\" class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-12 mx-auto\">\n        <h1 class=\"text-center\">Analysis</h1>\n        <form v-on:submit.prevent=\"addNewTask\">\n          <!-- <form v-on:submit=\"addNewTask\"> -->\n          <div class=\"row\">\n            <div class=\"col-md-1\">\n              <label for=\"tasktaginput\">Level</label>\n              <select v-model=\"Leveltag\" class=\"form-control\">\n                <option v-for=\" opt in opts\" v-bind:value=\"opt.level\">{{opt.level}}</option>\n              </select>\n            </div>\n\n            <div class=\"col-md-2\">\n              <label for=\"Yeartaginput\">Years</label>\n              <input v-model=\"Yeartag\" type=\"number\" id=\"Yeartaginput\" class=\"form-control\" placeholder=\"Add New Year\">\n            </div>\n\n            <div class=\"col-md-2\">\n              <label for=\"Question_numbertaginput\">Quest. no.</label>\n              <input v-model=\"Question_numbertag\" type=\"number\" id=\"Question_numbertaginput\" class=\"form-control\" placeholder=\"Question no.\">\n            </div>\n\n            <div class=\"col-md-2\">\n              <label for=\"Parttaginput\">Part</label>\n              <input v-model=\"Parttag\" type=\"text\" id=\"Parttaginput\" class=\"form-control\" placeholder=\"Add New Part\">\n            </div>\n\n            <div class=\"col-md-2\">\n              <label for=\"Sub_parttaginput\">Sub-Part</label>\n              <input v-model=\"Sub_parttag\" type=\"text\" id=\"Sub_parttaginput\" class=\"form-control\" placeholder=\"Add New Sub Part\">\n            </div>\n\n            <div class=\"col-md-2\">\n              <label for=\"Questiontaginput\">Question</label>\n              <input v-model=\"Questiontag\" type=\"text\" id=\"Questiontaginput\" class=\"form-control\" placeholder=\"Add New Question\">\n            </div>\n\n            <div class=\"col-md-2\">\n              <label for=\"Answertaginput\">Answer</label>\n              <input v-model=\"Answertag\" type=\"text\" id=\"Answertaginput\" class=\"form-control\" placeholder=\"Add New Answer\">\n            </div>\n\n            <div class=\"col-md-2\">\n              <label for=\"Topictag\">Topic</label>\n              <select v-model=\"Topictag\" @change=\"selectDrink\" id=\"Topictag\" class=\"form-control\">\n                <option v-for=\"(drink,index) in drinks\" :value=\"index\">{{ drink.label }}</option>\n              </select>\n              <p>selectedDrink: {{selectedDrink}}</p>\n            </div>\n\n            <div class=\"col-md-2\">\n              <label for=\"Sub_topictag\">sub-topic</label>\n              <select v-model=\"Sub_topictag\" id=\"Sub_topictag\" class=\"form-control\">\n                <option v-for=\"option in drinks[selectedDrink].options\" v-if=\"selectedDrink != -1\">{{ option }}</option>\n              </select>\n            </div>\n\n            <div class=\"col-md-2\">\n              <label for=\"Question_typetaginput\">Question type</label>\n              <select v-model=\"Question_typetag\" class=\"form-control\">\n                <option v-for=\"questionopt in questionopts\" v-bind:value=\"questionopt.type\">{{questionopt.type}}</option>\n              </select>\n            </div>\n\n            <div class=\"col-md-2\">\n              <label for=\"Markstaginput\">Marks</label>\n              <input v-model=\"Markstag\" type=\"number\" id=\"Markstaginput\" class=\"form-control\" placeholder=\"Marks\">\n            </div>\n          </div>\n\n          <button v-if=\"this.isEdit==false\" type=\"submit\" class=\"btn btn-success btn-block mt-3\">\n            Submit\n          </button>\n          <button v-else v-on:click=\"updateTask(id)\" type=\"button\" class=\"btn btn-primary btn-block mt-3\">\n            Update\n          </button>\n        </form>\n\n        <table class=\"table striped\">\n          <thead class=\"thead-dark\">\n            <tr>\n              <th>#</th>\n              <th>id</th>\n              <th>Level</th>\n              <th>Year</th>\n              <th>Q.no.</th>\n              <th>Part</th>\n              <th>Sub_part</th>\n              <th>Question</th>\n              <th>Answer</th>\n              <th>Topic</th>\n              <th>Sub topic</th>\n              <th>Q.type</th>\n              <th>Marks</th>\n              <th></th>\n              <th></th>\n            </tr>\n          </thead>\n          <tr v-for=\"(todo,index) in reversedTodos\" v-bind:id=\"todo.id\" v-bind:Level=\"todo.Level\" v-bind:Year=\"todo.Year\" v-bind:Question=\"todo.Question\" v-bind:Answer=\"todo.Answer\" v-bind:Topic=\"todo.Topic\" v-bind:Sub_topic=\"todo.Sub_topic\"\n            v-bind:Question_type=\"todo.Question_type\" v-bind:arks=\"todo.Marks\" v-bind:Question_number=\"todo.Question_number\" v-bind:Part=\"todo.Part\" v-bind:Sub_part=\"todo.Sub_part\">\n            <td class=\"text-center\">{{index+1}}</td>\n            <td class=\"text-center\">{{todo.id}}</td>\n            <td class=\"text-left\">{{todo.Level}}</td>\n            <td class=\"text-center\">{{todo.Year}}</td>\n            <td class=\"text-center\">{{todo.Question_number}}</td>\n            <td class=\"text-center\">{{todo.Part}}</td>\n            <td class=\"text-center\">{{todo.Sub_part}}</td>\n            <td class=\"text-left\">{{todo.Question}}</td>\n            <td class=\"text-left\">{{todo.Answer}}</td>\n            <td class=\"text-left\">{{todo.Topic}}</td>\n            <td class=\"text-left\">{{todo.Sub_topic}}</td>\n            <td class=\"text-left\">{{todo.Question_type}}</td>\n            <td class=\"text-center\">{{todo.Marks}}</td>\n            <td class=\"text-center\">\n              <!-- icon=\"icon name\", also need to add icon to main.js rewritting the name in camel-case as given at  https://fontawesome.com/icons/trash-alt?style=solid-->\n              <font-awesome-icon icon=\"edit\" v-on:click=\"editTask(todo.id, todo.Level, todo.Year, todo.Question, todo.Answer, todo.Topic, todo.Sub_topic,todo.Question_type, todo.Marks, todo.Question_number, todo.Part, todo.Sub_part)\" />\n            </td>\n            <td class=\"text-center\">\n              <font-awesome-icon icon=\"trash-alt\" v-on:click=\"deleteTask(todo.id)\" />\n            </td>\n            <!-- <td class=\"text-right\">\n              <button class=\"btn btn-info\" v-on:click=\"editTask(todo.id, todo.Level, todo.Year, todo.Question, todo.Answer, todo.Topic, todo.Sub_topic,todo.Question_type, todo.Marks, todo.Question_number, todo.Part, todo.Sub_part)\">Edit</button>\n              <button class=\"btn btn-danger\" v-on:click=\"deleteTask(todo.id)\">Delete</button>\n            </td> -->\n          </tr>\n        </table>\n      </div>\n    </div>\n  </div>\n</div>\n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n  name: 'List',\n  data() {\n    return {\n      drinks: [{\n          label: \"Beer\",\n          options: [\"Sam Adams\", \"Anchor Steam\", \"St. Arnold\"]\n        },\n        {\n          label: \"Soda\",\n          options: [\"Pepsi\", \"Coke\", \"RC\"]\n        },\n        {\n          label: \"Coffee\",\n          options: [\"Starbucks\", \"Dunkin Donuts\", \"Gross Hotel Room\"]\n        }\n      ],\n      selectLevels: ['Higher', 'Ordinary'],\n      selected: 'Higher',\n      // options: [\"Higher\", \"Ordinary\"],\n      selectedDrink: 0,\n      selectedOption: '',\n      opts: [{\n        level: 'Higher'\n      }, {\n        level: 'Ordinary'\n      }],\n      questionopts: [{\n        type: 'Theory'\n      }, {\n        type: 'Substitution'\n      }, {\n        type: 'Historic'\n      }, {\n        type: 'Experiment'\n      }, {\n        type: 'Definition'\n      }],\n      selected: '',\n      todos: [],\n      id: '',\n      Yeartag: 2015,\n      Leveltag: 'Higher',\n      Questiontag: 'Question about the thing....',\n      Answertag: 'Answer is 42!',\n      Topictag: 'Mechanics',\n      Sub_topictag: 'Friction',\n      Question_typetag: 'Theory',\n      Markstag: 5,\n      Question_numbertag: 2,\n      Parttag: 'c',\n      Sub_parttag: 'ii',\n      isEdit: false\n    }\n  },\n  mounted() {\n    this.getTasks()\n    //this.sortDynamicDropDownMenu()\n  },\n  methods: {\n    selectDrink: function() {\n      this.selectedOption = '';\n    },\n    sortDynamicDropDownMenu() {\n      //console.log(\"qwertyui\")\n      // console.log(\"hello we are result.data - this.todos[0].task_tag; \" + this.todos[0].task_tag )\n      for (var i = 0; i < this.todos.length; i++) {\n        // console.log(this.todos[i].task_tag);\n      }\n    },\n    // lastTask() {\n    //   axios.get(\"/api/lastTask\").then(\n    //     result => {\n    //       // this.todos = result.data\n    //       console.log(result.data);\n    //     },\n    //     error => {\n    //       console.error(error)\n    //     }\n    //   )\n    // },\n    getTasks() {\n      axios.get(\"/api/tasks\").then(\n        result => {\n          console.log(result.data)\n          this.todos = result.data\n        },\n        error => {\n          console.error(error)\n        }\n      )\n    },\n    addNewTask() {\n      console.log(\"this.Questiontag: \" + this.Questiontag);\n      axios.post(\"/api/task\", {\n          Level: this.Leveltag,\n          Year: this.Yeartag,\n          Question: this.Questiontag,\n          Answer: this.Answertag,\n          Topic: this.Topictag,\n          Sub_topic: this.Sub_topictag,\n          Question_type: this.Question_typetag,\n          Marks: this.Markstag,\n          Question_number: this.Question_numbertag,\n          Part: this.Parttag,\n          Sub_part: this.Sub_parttag\n        })\n        .then((res) => {\n          // this.Leveltag = 'Higher'\n          this.Yeartag = 2017\n          //this are always different and so should be cleared\n          this.Questiontag = ''\n          this.Answertag = ''\n          this.Topictag = 'Nuclear Physics'\n          this.Sub_parttag = 'Radioactivity'\n          this.Question_typetag = 'Theory'\n          this.Markstag = 2\n          this.Question_numbertag = 8\n          this.Parttag = 'vi'\n          this.Sub_part = ''\n          this.getTasks()\n        }).catch((err) => {\n          console.log(error)\n        })\n    },\n    editTask(id, edit_Level, edit_Year, edit_Question, edit_Answer, edit_Topic, edit_Sub_topic, edit_Question_type, edit_Marks, edit_Question_number, edit_Part, edit_Sub_part) {\n      this.id = id\n      this.Leveltag = edit_Level\n      this.Yeartag = edit_Year\n      this.Questiontag = edit_Question\n      this.Answertag = edit_Answer\n      this.Topictag = edit_Topic\n      this.Sub_parttag = edit_Sub_topic\n      this.Question_typetag = edit_Question_type\n      this.Markstag = edit_Marks\n      this.Question_numbertag = edit_Question_number\n      this.Parttag = edit_Part\n      this.Sub_parttag = edit_Sub_part\n      this.isEdit = true\n    },\n    updateTask(id) {\n      // axios.put(`/api/task/${this.id}`, {\n      axios.put('/api/task/' + id, {\n          Level: this.Leveltag,\n          Year: this.Yeartag,\n          Question_number: this.Question_numbertag,\n          Part: this.Parttag,\n          Sub_part: this.Sub_parttag,\n          Question: this.Questiontag,\n          Answer: this.Answertag,\n          Topic: this.Topictag,\n          Sub_part: this.Sub_parttag,\n          Question_type: this.Question_typetag,\n          Marks: this.Markstag\n        })\n        .then((res) => {\n          this.Leveltag = 'Higher'\n          this.Yeartag = 2010\n          this.Question_numbertag = 3\n          this.Parttag = 'b'\n          this.Sub_parttag = 'i'\n          this.Questiontag = 'quest...'\n          this.Answertag = 'ans:...'\n          this.Topictag = 'Heat'\n          this.Sub_topictag = 'Specific heat capacity'\n          this.Question_typetag = 'Substitution'\n          this.Markstag = 4\n          this.isEdit = false\n          this.getTasks()\n          console.log(res)\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    },\n    deleteTask(id) {\n      // axios.delete('/api/task/${id}')\n      axios.delete('/api/task/' + id)\n        .then((res) => {\n          console.log(\"delete id: \" + id);\n          this.Leveltag = ''\n          this.getTasks()\n          console.log(\"The delete task...\");\n          console.log(res)\n          console.log(\"....\");\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  },\n  computed: {\n    reversedTodos() {\n      return this.todos.slice().reverse()\n    }\n  },\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\n\na {\n  color: #42b983;\n}\n\nth {\n  text-align: center;\n}\n\ntd,\ntr {\n  text-align: center;\n}\n\nbutton {\n  width: 100px;\n  align: center;\n}\n</style>\n"],"sourceRoot":"src/components"}]}