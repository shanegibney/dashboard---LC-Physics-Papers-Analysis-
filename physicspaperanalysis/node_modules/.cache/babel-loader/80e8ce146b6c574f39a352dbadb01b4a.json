{"remainingRequest":"/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/node_modules/babel-loader/lib/index.js!/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/src/components/List.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/src/components/List.vue","mtime":1566688677831},{"path":"/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  name: 'List',\n  data: function data() {\n    return {\n      subjects: {\n        \"Mechanics\": [\"Force\", \"Momentum\", \"Acceleration\", \"Centripetal acceleration\", \"Gravity\", \"Friction\"],\n        \"Thermal\": [\"Charle's Law\", \"Specific heat capacity\", \"Latent heat of vaporisation\"],\n        \"Nuclear\": [\"Half-life\", \"Decay rate\", \"Radioactivity\"],\n        \"Particle\": [\"Hadrons\", \"Baryons\", \"Leptons\"]\n      },\n      topics: [],\n      subTopics: [],\n      selectLevels: ['Higher', 'Ordinary'],\n      // selected: 'Higher',\n      // selectedOption: '',\n      opts: [{\n        level: 'Higher'\n      }, {\n        level: 'Ordinary'\n      }],\n      questionopts: [{\n        type: 'Theory'\n      }, {\n        type: 'Substitution'\n      }, {\n        type: 'Historic'\n      }, {\n        type: 'Short Question'\n      }, {\n        type: 'Experiment'\n      }, {\n        type: 'Definition'\n      }, {\n        type: \"Derivation\"\n      }],\n      selected: '',\n      todos: [],\n      id: '',\n      addnewTopic: 'newTopic',\n      addnewtopic: '',\n      addnewsubtopic: '',\n      // disableSubTopicForm: false,\n      showQuery: false,\n      showDashboard: true,\n      showOptions: true,\n      levelQuery: 'Higher',\n      yearQuery: '2019',\n      qnumberQuery: '',\n      topicQuery: 'Mechanics',\n      TopicQuery: '',\n      Sub_topicQuery: '',\n      subtopicQuery: 'Force',\n      subTopicsQuery: '',\n      questiontypeQuery: 'Theory',\n      // Yeartag: reversedTodos[0].year,\n      Yeartag: 2019,\n      Leveltag: 'Higher',\n      Questiontag: '',\n      Answertag: '',\n      // Answertag: this.todos[this.todos.length - 1].Answer,\n      Topictag: '',\n      Sub_topictag: '',\n      // Sub_topictag: this.subjects[\"Force\", \"Momentum\", \"Acceleration\", \"Centripetal acceleration\", \"Gravity\", \"Friction\"],\n      // Sub_topictag: this.subjects[\"Mechanics\"],\n      Question_typetag: 'Theory',\n      Markstag: 5,\n      Question_numbertag: 2,\n      Parttag: 'c',\n      Sub_parttag: 'ii',\n      isEdit: false,\n      existingtopic: true,\n      TopicExisting: '',\n      Sub_topicExisting: '',\n      subTopicsExisting: [],\n      check: false\n    };\n  },\n  created: function created() {\n    this.getTasks(); // need to get and generate topics and related subtopics object\n  },\n  methods: {\n    toggleExisting: function toggleExisting() {\n      this.existingtopic = !this.existingtopic;\n    },\n    addOptions: function addOptions() {\n      // check if topic exists in subjects\n      this.check = this.subjects.hasOwnProperty(this.TopicExisting);\n\n      if (this.check) {\n        this.subjects[this.TopicExisting].push(this.Sub_topicExisting);\n      } else {\n        this.subjects[this.TopicExisting] = []; // must set this as an array\n\n        this.subjects[this.TopicExisting].push(this.Sub_topicExisting);\n      }\n\n      this.TopicExisting = '';\n      this.Sub_topicExisting = '';\n      console.log(JSON.stringify(this.subjects, null, 4));\n    },\n    toggleQuery: function toggleQuery() {\n      this.showQuery = !this.showQuery;\n    },\n    toggleOptions: function toggleOptions() {\n      this.showOptions = !this.showOptions;\n    },\n    toggleDashboard: function toggleDashboard() {\n      this.showDashboard = !this.showDashboard;\n    },\n    getTasks: function getTasks() {\n      var _this = this;\n\n      axios.get(\"/api/tasks\").then(function (result) {\n        // console.log(result.data)\n        _this.todos = result.data; // get most recently added elements in todos for dashboard panel form\n\n        _this.Yeartag = _this.todos[_this.todos.length - 1].Year;\n        _this.Leveltag = _this.todos[_this.todos.length - 1].Level;\n        _this.Questiontag = _this.todos[_this.todos.length - 1].Question;\n        _this.Answertag = _this.todos[_this.todos.length - 1].Answer;\n        _this.Topictag = _this.todos[_this.todos.length - 1].Topic;\n        _this.Sub_topictag = _this.todos[_this.todos.length - 1].Sub_topic;\n        _this.Question_typetag = _this.todos[_this.todos.length - 1].Question_type;\n        _this.Markstag = _this.todos[_this.todos.length - 1].Marks;\n        _this.Question_numbertag = _this.todos[_this.todos.length - 1].Question_number;\n        _this.Parttag = _this.todos[_this.todos.length - 1].Part;\n        _this.Sub_parttag = _this.todos[_this.todos.length - 1].Sub_part;\n      }, function (error) {\n        console.error(error);\n      });\n    },\n    getQuery: function getQuery(level, topic, subtopic) {\n      var _this2 = this;\n\n      if (!topic) {\n        topic = \" \";\n      }\n\n      if (!subtopic) {\n        subtopic = \" \";\n      }\n\n      if (!level) {\n        level = \" \";\n      }\n\n      axios.get(\"/api/tasks/\" + level + \"/\" + topic + \"/\" + subtopic + \"/\").then(function (result) {\n        console.log(result.data);\n        _this2.todos = result.data;\n      }, function (error) {\n        console.error(error);\n      });\n    },\n    addNewTask: function addNewTask() {\n      var _this3 = this;\n\n      // console.log(\"this.Questiontag: \" + this.Questiontag);\n      axios.post(\"/api/task\", {\n        Level: this.Leveltag,\n        Year: this.Yeartag,\n        Question: this.Questiontag,\n        Answer: this.Answertag,\n        Topic: this.Topictag,\n        Sub_topic: this.Sub_topictag,\n        Question_type: this.Question_typetag,\n        Marks: this.Markstag,\n        Question_number: this.Question_numbertag,\n        Part: this.Parttag,\n        Sub_part: this.Sub_parttag\n      }).then(function (res) {\n        _this3.getTasks();\n      }).catch(function (err) {\n        console.log(error);\n      });\n    },\n    //need to call editTask() twice to invoke the watched variable Sub_topictag\n    editTask: function editTask(id, edit_Level, edit_Year, edit_Question, edit_Answer, edit_Topic, edit_Sub_topic, edit_Question_type, edit_Marks, edit_Question_number, edit_Part, edit_Sub_part) {\n      this.id = id;\n      this.Leveltag = edit_Level;\n      this.Yeartag = edit_Year;\n      this.Questiontag = edit_Question;\n      this.Answertag = edit_Answer;\n      this.Topictag = edit_Topic;\n      this.Sub_topictag = edit_Sub_topic;\n      this.Question_typetag = edit_Question_type;\n      this.Markstag = edit_Marks;\n      this.Question_numbertag = edit_Question_number;\n      this.Parttag = edit_Part;\n      this.Sub_parttag = edit_Sub_part;\n      this.isEdit = true;\n    },\n    updateTask: function updateTask(id) {\n      var _this4 = this;\n\n      console.log(\"updateTask()\"); // axios.put(`/api/task/${this.id}`, {\n\n      axios.put('/api/task/' + id, {\n        Level: this.Leveltag,\n        Year: this.Yeartag,\n        Question_number: this.Question_numbertag,\n        Part: this.Parttag,\n        Sub_part: this.Sub_parttag,\n        Question: this.Questiontag,\n        Answer: this.Answertag,\n        Topic: this.Topictag,\n        Sub_topic: this.Sub_topictag,\n        Question_type: this.Question_typetag,\n        Marks: this.Markstag\n      }).then(function (res) {\n        _this4.isEdit = false;\n\n        _this4.getTasks();\n\n        console.log(res);\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    deleteTask: function deleteTask(id) {\n      var _this5 = this;\n\n      // axios.delete('/api/task/${id}')\n      axios.delete('/api/task/' + id).then(function (res) {\n        _this5.getTasks();\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  },\n  computed: {\n    reversedTodos: function reversedTodos() {\n      return this.todos.slice().reverse();\n    }\n  },\n  watch: {\n    Topictag: function Topictag() {\n      this.topics = [];\n      this.subTopics = []; // uncommenting this line below will clear subTopics\n      // everytime edit is used, we don't want that!\n      // this.Sub_topictag = \"\";\n\n      console.log(\"watching this.Topictag..........\");\n\n      if (this.Topictag.length > 0) {\n        // if (this.Topictag == this.newTopic) {\n        //   console.log(\"this.Topictag = \" + this.Topictag);\n        // } else {\n        console.log(\"watching this.Topictag.length > 0\");\n        this.subTopics = this.subjects[this.Topictag];\n        console.log(\"this.Topictag = \" + this.Topictag); // }\n      } // console.log(\"this.Topictag.length = \" + this.Topictag.length);\n      // if (this.Topictag == \"newTopic\") {\n      //   console.log(\"someone is trying to add a new topic....\");\n      // }\n\n    },\n    TopicQuery: function TopicQuery() {\n      this.topicsQuery = [];\n      this.subTopicsQuery = []; // uncommenting this line below will clear subTopics\n      // everytime edit is used, we don't want that!\n      // this.Sub_topictag = \"\";\n\n      if (this.TopicQuery.length > 0) {\n        this.subTopicsQuery = this.subjects[this.TopicQuery];\n      }\n    } // addnewtopic: function() {\n    //   console.log(\"watch: change on addnewtopic: \" + this.addnewtopic);\n    //   // this.disableSubTopicForm = true;\n    // }\n    // TopicExisting: function() {\n    //   console.log(\"TopicExisting: \" + this.TopicExisting);\n    //   // this.Sub_TopicExisting = [];\n    //   // if (this.TopicExisting.length > 0) {\n    //   //   this.subTopicsExisting = this.subjects[this.TopicExisting]\n    //   // }\n    // }\n\n  }\n};",{"version":3,"sources":["List.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div class=\"hello\">\n  <div id=\"todo-list-example\" class=\"container\">\n\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <a class=\"navbar-brand\" href=\"#\">Physics Papers</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav mr-auto\">\n          <li class=\"nav-item active\">\n            <a class=\"nav-link\" @click=\"toggleDashboard()\" v-if=\"!showDashboard\">Show Dashboard Panel</a>\n            <a class=\"nav-link\" @click=\"toggleDashboard()\" v-if=\"showDashboard\">Remove Dashboard Panel</a>\n          </li>\n          <li class=\"nav-item active\">\n            <a class=\"nav-link\" @click=\"toggleQuery()\" v-if=\"!showQuery\">Show Query Panel</a>\n            <a class=\"nav-link\" @click=\"toggleQuery()\" v-if=\"showQuery\">Remove Query Panel</a>\n          </li>\n          <li class=\"nav-item active\">\n            <a class=\"nav-link\" @click=\"toggleOptions()\" v-if=\"!showOptions\">Show Options Panel</a>\n            <a class=\"nav-link\" @click=\"toggleOptions()\" v-if=\"showOptions\">Remove Options Panel</a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n\n    <!-- Add options panel -->\n    <div class=\"row jumbotron\" v-if=\"showOptions\">\n      <form>\n        <div class=\"col-md-12\">\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <button @click=\"toggleExisting()\" type=\"submit\" class=\"btn btn-success mt-4 btn-newrelatedtopic\">Add new topic and related sub-topic</button>\n            </div>\n            <div class=\"col-md-6\">\n              <button @click=\"toggleExisting()\" type=\"submit\" class=\"btn btn-success mt-4 btn-existingtopic\">Add sub-topic to existing topic</button>\n            </div>\n          </div>\n        </div>\n      </form>\n\n      <form v-on:submit.prevent=\"addOptions\">\n        <div class=\"row jumbotron\" v-if=\"existingtopic\">\n          <div class=\"col-md-12\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <button type=\"submit\" class=\"btn btn-success mt-4\">Submit</button>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <label for=\"addnewtopicss\"><strong>Add new topic: </strong></label>\n                <input class=\"form-control\" type=\"text\" v-model=\"TopicExisting\">\n              </div>\n              <div class=\"col-md-6\">\n                <label for=\"addnewsubtopic\"><strong>New related sub topic: </strong></label>\n                <input class=\"form-control\" :disabled=\"TopicExisting.length == 0\" type=\"text\" v-model=\"Sub_topicExisting\" placeholder=\"Add related sub topic\">\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n\n      <form v-on:submit.prevent=\"addOptions\">\n        <div class=\"row jumbotron\" v-if=\"!existingtopic\">\n          <div class=\"col-md-12\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <button type=\"submit\" class=\"btn btn-success mt-4\">Submit</button>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-6 inputs\">\n                <div class=\"dropdown\">\n                  <label for=\"topicExistingg\"><strong>Existing topic: </strong></label><br>\n                  <select v-model=\"TopicExisting\" name=\"topicExistingg\" id=\"topicExistingg\" class=\"form-control\">\n                    <option v-for=\"(topicExisting_obj, topicExisting) in subjects\" :value=\"topicExisting\">{{topicExisting}}</option>\n                  </select>\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                <div class=\"dropdown inputs\">\n                  <label for=\"subtopicExistingg\"><strong>Add sub-topic to existing topic: </strong></label><br>\n                  <input type=\"text\" name=\"subtopicExistingg\" v-model=\"Sub_topicExisting\">\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n    <!-- End add options panel -->\n\n    <!-- Dashboard start -->\n    <div class=\"row\" v-if=\"showDashboard\">\n      <div class=\"col-md-12\">\n        <form v-on:submit.prevent=\"addNewTask\" class=\"jumbotron\">\n          <!-- <form class=\"jumbotron\"> -->\n          <div class=\"row\">\n            <div class=\"col-md-2\">\n              <div class=\"dropdown inputs\">\n                <label for=\"level\"><strong>Level: </strong></label><br>\n                <select v-model=\"Leveltag\" class=\"form-control\">\n                  <option v-for=\"opt in opts\" v-bind:value=\"opt.level\">{{opt.level}}</option>\n                </select>\n              </div>\n            </div>\n\n            <div class=\"col-md-2\">\n              <div class=\"dropdown inputs\">\n                <label for=\"year\"><strong>Year: </strong></label><br>\n                <select v-model=\"Yeartag\" class=\"form-control\">\n                  <option v-for=\"i in 17\" v-bind:value=(i+2002)>{{i+2002}}</option>\n                </select>\n              </div>\n            </div>\n\n            <div class=\"col-md-2\">\n              <label for=\"questionnumber\"><strong>Q. number: </strong></label><br>\n              <input v-model=\"Question_numbertag\" type=\"number\" id=\"questionnumbert\" class=\"form-control\" placeholder=\"Question no.\">\n            </div>\n\n            <div class=\"col-md-2\">\n              <label for=\"part\"><strong>Part: </strong></label><br>\n              <input v-model=\"Parttag\" type=\"text\" id=\"part\" class=\"form-control\" placeholder=\"Add New Part\">\n            </div>\n\n            <div class=\"col-md-2\">\n              <label for=\"subpart\"><strong>Sub-part: </strong></label><br>\n              <input v-model=\"Sub_parttag\" type=\"text\" id=\"subpart\" class=\"form-control\" placeholder=\"Add New Sub Part\">\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-md-2 inputs\">\n              <div class=\"dropdown\">\n                <label for=\"topic\"><strong>Topic: </strong></label><br>\n                <select v-model=\"Topictag\" name=\"topic\" id=\"topic\" class=\"form-control\">\n                  <option v-for=\"(topic_obj, topic) in subjects\" :value=\"topic\">{{topic}}</option>\n                </select>\n              </div>\n            </div>\n\n            <div class=\"col-md-3\">\n              <div class=\"dropdown inputs\">\n                <label for=\"subtopic\"><strong>Sub-topic: </strong></label><br>\n                <select v-model=\"Sub_topictag\" class=\"form-control\" name=\"subtopic\" id=\"subtopic\">\n                  <option v-for=\"subTopic in subTopics\">{{subTopic}}</option>\n                </select>\n              </div>\n            </div>\n\n            <div class=\"col-md-2\">\n              <div class=\"dropdown inputs\">\n                <label for=\"Question_typetaginput\"><strong>Question type: </strong></label><br>\n                <select v-model=\"Question_typetag\" class=\"form-control\">\n                  <option v-for=\"questionopt in questionopts\" v-bind:value=\"questionopt.type\">{{questionopt.type}}</option>\n                </select>\n              </div>\n            </div>\n\n            <div class=\"col-md-2\">\n              <label for=\"marks\"><strong>Marks: </strong></label><br>\n              <input v-model=\"Markstag\" type=\"number\" id=\"marks\" class=\"form-control\" placeholder=\"Marks\">\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <label for=\"question\"><strong>Question: </strong></label><br>\n              <textarea v-model=\"Questiontag\" type=\"text\" id=\"Question\" class=\"form-control\" placeholder=\"Add New Question\"></textarea>\n            </div>\n\n            <div class=\"col-md-6\">\n              <div class=\"form-group\">\n                <label for=\"answer\"><strong>Answer: </strong></label><br>\n                <textarea v-model=\"Answertag\" type=\"textinput\" id=\"answer\" class=\"form-control\" placeholder=\"add new answer\"></textarea>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <button v-if=\"this.isEdit==false\" type=\"submit\" class=\"btn btn-success btn-block mt-3\">\n                Submit\n              </button>\n              <button v-else v-on:click=\"updateTask(id)\" type=\"button\" class=\"btn btn-primary btn-block mt-3\">\n                Update\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n    <!-- End dashboard -->\n\n    <!-- Begin query panel -->\n    <div class=\"row\" v-if=\"showQuery\">\n      <div class=\"col-md-12\">\n        <form v-on:submit.prevent class=\"jumbotron\">\n          <div class=\"form-group\">\n            <div class=\"row queryinputs\">\n              <!-- <div class=\"col-md-2\">\n                <label for=\"querybytopic\"><strong>Query by Topic: </strong></label><br>\n              </div>\n              <div class=\"col-md-3\">\n                <div class=\"dropdown inputs\">\n                  <select v-model=\"topicQuery\" class=\"form-control\" name=\"querybytopic\" id=\"querybytopic\">\n                    <option value=\"Mechanics\">Mechanics</option>\n                    <option value=\"Nuclear\">Nuclear</option>\n                    <option value=\"Thermal\">Thermal</option>\n                    <option value=\"Thermal\">Particle</option>\n                    <option value=\"\" placeholder=\"leave empty\">leave empty</option>\n                  </select>\n                </div>\n              </div> -->\n\n              <div class=\"col-md-2 inputs\">\n                <div class=\"dropdown\">\n                  <label for=\"topic\"><strong>Topic: </strong></label><br>\n                  <select v-model=\"TopicQuery\" name=\"topic\" id=\"topic\" class=\"form-control\">\n                    <option v-for=\"(topic_obj, topic) in subjects\" :value=\"topic\">{{topic}}</option>\n                    <option value=\"\" placeholder=\"leave empty\">leave empty</option>\n                  </select>\n                </div>\n              </div>\n\n              <div class=\"col-md-3\">\n                <div class=\"dropdown inputs\">\n                  <label for=\"subtopic\"><strong>Sub-topic: </strong></label><br>\n                  <select :disabled=\"subTopicsQuery.length == 0\" v-model=\"Sub_topicQuery\" class=\"form-control\" name=\"subtopic\" id=\"subtopic\">\n                    <option v-for=\"subTopics in subTopicsQuery\">{{subTopics}}</option>\n                    <option value=\"\" placeholder=\"leave empty\">leave empty</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <div class=\"row\">\n              <div class=\"col-md-2\">\n                <label for=\"querybytopic\"><strong>Query by Level: </strong></label><br>\n              </div>\n              <div class=\"col-md-3\">\n                <div class=\"form-group\">\n                  <div class=\"dropdown inputs\">\n                    <select v-model=\"levelQuery\" class=\"form-control\" name=\"querybylevel\" id=\"querybylevel\">\n                      <option value=\"Higher\">Higher</option>\n                      <option value=\"Ordinary\">Ordinary</option>\n                      <option value=\"\" placeholder=\"leave empty\">leave empty</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-2\">\n              <button v-on:click=\"getQuery(levelQuery, TopicQuery, Sub_topicQuery)\" type=\"submit\" class=\"btn btn-success btn-submitquery\">\n                Submit Query\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n    <!-- End Query -->\n\n    <!-- Display data-->\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <hr>\n      </div>\n    </div>\n    <div v-for=\"(todo,index) in reversedTodos\">\n      <div class=\"row\">\n        <div class=\"col-md-12 alignRight\">\n          <font-awesome-icon icon=\"edit\" v-on:click=\"editTask(todo.id, todo.Level, todo.Year, todo.Question, todo.Answer, todo.Topic, todo.Sub_topic,todo.Question_type, todo.Marks, todo.Question_number, todo.Part, todo.Sub_part)\" />\n          &nbsp;\n          <font-awesome-icon icon=\"trash-alt\" v-on:click=\"deleteTask(todo.id)\" />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-6 alignLeft\"><strong>{{todo.Level}} {{todo.Year}} Q.{{todo.Question_number}} {{todo.Part}} {{todo.Sub_part}} ({{todo.Marks}} marks)</strong></div>\n        <div class=\"col-md-6 alignRight\">({{todo.Topic}}, {{todo.Sub_topic}}, {{todo.Question_type}} type question)</div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-12 alignLeft\"> Question: {{todo.Question}}</div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-12 alignLeft\"> Answer: {{todo.Answer}}</div>\n        <div class=\"col-md-12\">\n          <hr>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- End data display -->\n\n</div>\n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n  name: 'List',\n  data() {\n    return {\n      subjects: {\n        \"Mechanics\": [\"Force\", \"Momentum\", \"Acceleration\", \"Centripetal acceleration\", \"Gravity\", \"Friction\"],\n        \"Thermal\": [\"Charle's Law\", \"Specific heat capacity\", \"Latent heat of vaporisation\"],\n        \"Nuclear\": [\"Half-life\", \"Decay rate\", \"Radioactivity\"],\n        \"Particle\": [\"Hadrons\", \"Baryons\", \"Leptons\"]\n      },\n      topics: [],\n      subTopics: [],\n\n      selectLevels: ['Higher', 'Ordinary'],\n      // selected: 'Higher',\n      // selectedOption: '',\n      opts: [{\n        level: 'Higher'\n      }, {\n        level: 'Ordinary'\n      }],\n      questionopts: [{\n        type: 'Theory'\n      }, {\n        type: 'Substitution'\n      }, {\n        type: 'Historic'\n      }, {\n        type: 'Short Question'\n      }, {\n        type: 'Experiment'\n      }, {\n        type: 'Definition'\n      }, {\n        type: \"Derivation\"\n      }],\n      selected: '',\n      todos: [],\n      id: '',\n      addnewTopic: 'newTopic',\n      addnewtopic: '',\n      addnewsubtopic: '',\n      // disableSubTopicForm: false,\n\n      showQuery: false,\n      showDashboard: true,\n      showOptions: true,\n\n      levelQuery: 'Higher',\n      yearQuery: '2019',\n      qnumberQuery: '',\n      topicQuery: 'Mechanics',\n      TopicQuery: '',\n      Sub_topicQuery: '',\n      subtopicQuery: 'Force',\n      subTopicsQuery: '',\n      questiontypeQuery: 'Theory',\n\n      // Yeartag: reversedTodos[0].year,\n      Yeartag: 2019,\n      Leveltag: 'Higher',\n      Questiontag: '',\n      Answertag: '',\n      // Answertag: this.todos[this.todos.length - 1].Answer,\n      Topictag: '',\n      Sub_topictag: '',\n      // Sub_topictag: this.subjects[\"Force\", \"Momentum\", \"Acceleration\", \"Centripetal acceleration\", \"Gravity\", \"Friction\"],\n      // Sub_topictag: this.subjects[\"Mechanics\"],\n      Question_typetag: 'Theory',\n      Markstag: 5,\n      Question_numbertag: 2,\n      Parttag: 'c',\n      Sub_parttag: 'ii',\n      isEdit: false,\n\n      existingtopic: true,\n      TopicExisting: '',\n      Sub_topicExisting: '',\n      subTopicsExisting: [],\n\n      check: false\n    }\n  },\n  created() {\n    this.getTasks()\n    // need to get and generate topics and related subtopics object\n  },\n  methods: {\n    toggleExisting() {\n      this.existingtopic = !this.existingtopic;\n    },\n    addOptions() {\n      // check if topic exists in subjects\n      this.check = this.subjects.hasOwnProperty(this.TopicExisting)\n      if (this.check) {\n        this.subjects[this.TopicExisting].push(this.Sub_topicExisting);\n      } else {\n        this.subjects[this.TopicExisting] = []; // must set this as an array\n        this.subjects[this.TopicExisting].push(this.Sub_topicExisting);\n      }\n      this.TopicExisting = '';\n      this.Sub_topicExisting = '';\n      console.log(JSON.stringify(this.subjects, null, 4))\n    },\n    toggleQuery() {\n      this.showQuery = !this.showQuery;\n    },\n    toggleOptions() {\n      this.showOptions = !this.showOptions;\n    },\n    toggleDashboard() {\n      this.showDashboard = !this.showDashboard;\n    },\n    getTasks() {\n      axios.get(\"/api/tasks\").then(\n        result => {\n          // console.log(result.data)\n          this.todos = result.data\n\n          // get most recently added elements in todos for dashboard panel form\n          this.Yeartag = this.todos[this.todos.length - 1].Year\n          this.Leveltag = this.todos[this.todos.length - 1].Level\n          this.Questiontag = this.todos[this.todos.length - 1].Question\n          this.Answertag = this.todos[this.todos.length - 1].Answer\n          this.Topictag = this.todos[this.todos.length - 1].Topic\n          this.Sub_topictag = this.todos[this.todos.length - 1].Sub_topic\n          this.Question_typetag = this.todos[this.todos.length - 1].Question_type\n          this.Markstag = this.todos[this.todos.length - 1].Marks\n          this.Question_numbertag = this.todos[this.todos.length - 1].Question_number\n          this.Parttag = this.todos[this.todos.length - 1].Part\n          this.Sub_parttag = this.todos[this.todos.length - 1].Sub_part\n        },\n        error => {\n          console.error(error)\n        }\n      )\n    },\n    getQuery(level, topic, subtopic) {\n      if (!topic) {\n        topic = \" \";\n      }\n      if (!subtopic) {\n        subtopic = \" \";\n      }\n      if (!level) {\n        level = \" \";\n      }\n      axios.get(\"/api/tasks/\" + level + \"/\" + topic + \"/\" + subtopic + \"/\").then(\n        result => {\n          console.log(result.data)\n          this.todos = result.data\n        },\n        error => {\n          console.error(error)\n        }\n      )\n    },\n    addNewTask() {\n      // console.log(\"this.Questiontag: \" + this.Questiontag);\n      axios.post(\"/api/task\", {\n          Level: this.Leveltag,\n          Year: this.Yeartag,\n          Question: this.Questiontag,\n          Answer: this.Answertag,\n          Topic: this.Topictag,\n          Sub_topic: this.Sub_topictag,\n          Question_type: this.Question_typetag,\n          Marks: this.Markstag,\n          Question_number: this.Question_numbertag,\n          Part: this.Parttag,\n          Sub_part: this.Sub_parttag\n        })\n        .then((res) => {\n          this.getTasks()\n        }).catch((err) => {\n          console.log(error)\n        })\n    },\n    //need to call editTask() twice to invoke the watched variable Sub_topictag\n    editTask(id, edit_Level, edit_Year, edit_Question, edit_Answer, edit_Topic, edit_Sub_topic, edit_Question_type, edit_Marks, edit_Question_number, edit_Part, edit_Sub_part) {\n      this.id = id\n      this.Leveltag = edit_Level\n      this.Yeartag = edit_Year\n      this.Questiontag = edit_Question\n      this.Answertag = edit_Answer\n      this.Topictag = edit_Topic\n      this.Sub_topictag = edit_Sub_topic\n      this.Question_typetag = edit_Question_type\n      this.Markstag = edit_Marks\n      this.Question_numbertag = edit_Question_number\n      this.Parttag = edit_Part\n      this.Sub_parttag = edit_Sub_part\n      this.isEdit = true\n    },\n    updateTask(id) {\n      console.log(\"updateTask()\");\n      // axios.put(`/api/task/${this.id}`, {\n      axios.put('/api/task/' + id, {\n          Level: this.Leveltag,\n          Year: this.Yeartag,\n          Question_number: this.Question_numbertag,\n          Part: this.Parttag,\n          Sub_part: this.Sub_parttag,\n          Question: this.Questiontag,\n          Answer: this.Answertag,\n          Topic: this.Topictag,\n          Sub_topic: this.Sub_topictag,\n          Question_type: this.Question_typetag,\n          Marks: this.Markstag\n        })\n        .then((res) => {\n          this.isEdit = false;\n          this.getTasks()\n          console.log(res)\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    },\n    deleteTask(id) {\n      // axios.delete('/api/task/${id}')\n      axios.delete('/api/task/' + id)\n        .then((res) => {\n          this.getTasks()\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  },\n  computed: {\n    reversedTodos() {\n      return this.todos.slice().reverse()\n    }\n  },\n  watch: {\n    Topictag: function() {\n      this.topics = [];\n      this.subTopics = [];\n      // uncommenting this line below will clear subTopics\n      // everytime edit is used, we don't want that!\n      // this.Sub_topictag = \"\";\n      console.log(\"watching this.Topictag..........\");\n\n      if (this.Topictag.length > 0) {\n        // if (this.Topictag == this.newTopic) {\n        //   console.log(\"this.Topictag = \" + this.Topictag);\n        // } else {\n        console.log(\"watching this.Topictag.length > 0\");\n        this.subTopics = this.subjects[this.Topictag]\n        console.log(\"this.Topictag = \" + this.Topictag);\n        // }\n      }\n      // console.log(\"this.Topictag.length = \" + this.Topictag.length);\n\n      // if (this.Topictag == \"newTopic\") {\n      //   console.log(\"someone is trying to add a new topic....\");\n      // }\n    },\n    TopicQuery: function() {\n      this.topicsQuery = [];\n      this.subTopicsQuery = [];\n      // uncommenting this line below will clear subTopics\n      // everytime edit is used, we don't want that!\n      // this.Sub_topictag = \"\";\n      if (this.TopicQuery.length > 0) {\n        this.subTopicsQuery = this.subjects[this.TopicQuery]\n      }\n    },\n    // addnewtopic: function() {\n    //   console.log(\"watch: change on addnewtopic: \" + this.addnewtopic);\n    //   // this.disableSubTopicForm = true;\n    // }\n    // TopicExisting: function() {\n    //   console.log(\"TopicExisting: \" + this.TopicExisting);\n    //   // this.Sub_TopicExisting = [];\n    //   // if (this.TopicExisting.length > 0) {\n    //   //   this.subTopicsExisting = this.subjects[this.TopicExisting]\n    //   // }\n    // }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\n\na {\n  color: #42b983;\n}\n\nth {\n  text-align: center;\n}\n\ntd,\ntr {\n  text-align: center;\n}\n\n/* td {\n  width: 20px;\n  white-space: nowrap;\n  overflow: hidden;\n} */\n\nbutton {\n  width: 100px;\n  align: center;\n}\n\n.overflow-ellipsis {\n  text-overflow: ellipsis;\n}\n\n.queryinputs {\n  margin: 10px;\n}\n\n.btn-submitquery {\n  white-space: nowrap;\n  width: 150px;\n}\n\n.btn-existingtopic {\n  white-space: nowrap;\n  width: 350px;\n}\n\n.btn-newrelatedtopic {\n  white-space: nowrap;\n  width: 350px;\n}\n\n.btn-query-show {\n  white-space: nowrap;\n  width: 150px;\n}\n\n.btn-query-remove {\n  white-space: nowrap;\n  width: 200px;\n}\n\n.btn-dashboard-show {\n  white-space: nowrap;\n  width: 200px;\n}\n\n.btn-dashboard-remove {\n  white-space: nowrap;\n  width: 210px;\n}\n\n.alignLeft {\n  text-align: left;\n}\n\n.alignRight {\n  text-align: right;\n}\n\nbutton {\n  margin: 5px;\n}\n\n.optionsPanel {\n  border-radius: 5px;\n  border: 1px solid gray;\n}\n\n.jumbotron {\n  border: 1px solid black;\n}\n</style>\n"],"sourceRoot":"src/components"}]}