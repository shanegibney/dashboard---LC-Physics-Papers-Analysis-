{"remainingRequest":"/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/src/components/List.vue?vue&type=template&id=264bddce&scoped=true&","dependencies":[{"path":"/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/src/components/List.vue","mtime":1564585594882},{"path":"/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"hello\" }, [\n    _c(\n      \"div\",\n      { staticClass: \"container\", attrs: { id: \"todo-list-example\" } },\n      [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-md-12 mx-auto\" }, [\n            _c(\"h1\", { staticClass: \"text-center\" }, [_vm._v(\"Analysis\")]),\n            _c(\n              \"form\",\n              {\n                on: {\n                  submit: function($event) {\n                    $event.preventDefault()\n                    return _vm.addNewTask($event)\n                  }\n                }\n              },\n              [\n                _c(\"div\", { staticClass: \"row\" }, [\n                  _c(\"div\", { staticClass: \"col-md-1\" }, [\n                    _c(\"label\", { attrs: { for: \"tasktaginput\" } }, [\n                      _vm._v(\"Level\")\n                    ]),\n                    _c(\n                      \"select\",\n                      {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.Leveltag,\n                            expression: \"Leveltag\"\n                          }\n                        ],\n                        staticClass: \"form-control\",\n                        on: {\n                          change: function($event) {\n                            var $$selectedVal = Array.prototype.filter\n                              .call($event.target.options, function(o) {\n                                return o.selected\n                              })\n                              .map(function(o) {\n                                var val = \"_value\" in o ? o._value : o.value\n                                return val\n                              })\n                            _vm.Leveltag = $event.target.multiple\n                              ? $$selectedVal\n                              : $$selectedVal[0]\n                          }\n                        }\n                      },\n                      _vm._l(_vm.opts, function(opt) {\n                        return _c(\n                          \"option\",\n                          { domProps: { value: opt.level } },\n                          [_vm._v(_vm._s(opt.level))]\n                        )\n                      }),\n                      0\n                    )\n                  ]),\n                  _c(\"div\", { staticClass: \"col-md-2\" }, [\n                    _c(\"label\", { attrs: { for: \"Yeartaginput\" } }, [\n                      _vm._v(\"Years\")\n                    ]),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.Yeartag,\n                          expression: \"Yeartag\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: {\n                        type: \"number\",\n                        id: \"Yeartaginput\",\n                        placeholder: \"Add New Year\"\n                      },\n                      domProps: { value: _vm.Yeartag },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.Yeartag = $event.target.value\n                        }\n                      }\n                    })\n                  ]),\n                  _c(\"div\", { staticClass: \"col-md-2\" }, [\n                    _c(\"label\", { attrs: { for: \"Question_numbertaginput\" } }, [\n                      _vm._v(\"Question no.\")\n                    ]),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.Question_numbertag,\n                          expression: \"Question_numbertag\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: {\n                        type: \"number\",\n                        id: \"Question_numbertaginput\",\n                        placeholder: \"Question no.\"\n                      },\n                      domProps: { value: _vm.Question_numbertag },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.Question_numbertag = $event.target.value\n                        }\n                      }\n                    })\n                  ]),\n                  _c(\"div\", { staticClass: \"col-md-2\" }, [\n                    _c(\"label\", { attrs: { for: \"Questiontaginput\" } }, [\n                      _vm._v(\"Question\")\n                    ]),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.Questiontag,\n                          expression: \"Questiontag\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: {\n                        type: \"text\",\n                        id: \"Questiontaginput\",\n                        placeholder: \"Add New Question\"\n                      },\n                      domProps: { value: _vm.Questiontag },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.Questiontag = $event.target.value\n                        }\n                      }\n                    })\n                  ]),\n                  _c(\"div\", { staticClass: \"col-md-2\" }, [\n                    _c(\"label\", { attrs: { for: \"Answertaginput\" } }, [\n                      _vm._v(\"Answer\")\n                    ]),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.Answertag,\n                          expression: \"Answertag\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: {\n                        type: \"text\",\n                        id: \"Answertaginput\",\n                        placeholder: \"Add New Answer\"\n                      },\n                      domProps: { value: _vm.Answertag },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.Answertag = $event.target.value\n                        }\n                      }\n                    })\n                  ]),\n                  _c(\"div\", { staticClass: \"col-md-2\" }, [\n                    _c(\"label\", { attrs: { for: \"Topictag\" } }, [\n                      _vm._v(\"Topic\")\n                    ]),\n                    _c(\n                      \"select\",\n                      {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.Topictag,\n                            expression: \"Topictag\"\n                          }\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: { id: \"Topictag\" },\n                        on: {\n                          change: [\n                            function($event) {\n                              var $$selectedVal = Array.prototype.filter\n                                .call($event.target.options, function(o) {\n                                  return o.selected\n                                })\n                                .map(function(o) {\n                                  var val = \"_value\" in o ? o._value : o.value\n                                  return val\n                                })\n                              _vm.Topictag = $event.target.multiple\n                                ? $$selectedVal\n                                : $$selectedVal[0]\n                            },\n                            _vm.selectDrink\n                          ]\n                        }\n                      },\n                      _vm._l(_vm.drinks, function(drink, index) {\n                        return _c(\"option\", { domProps: { value: index } }, [\n                          _vm._v(_vm._s(drink.label))\n                        ])\n                      }),\n                      0\n                    )\n                  ]),\n                  _c(\"div\", { staticClass: \"col-md-1\" }, [\n                    _c(\"label\", { attrs: { for: \"Question_typetaginput\" } }, [\n                      _vm._v(\"Question type\")\n                    ]),\n                    _c(\n                      \"select\",\n                      {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.Question_typetag,\n                            expression: \"Question_typetag\"\n                          }\n                        ],\n                        staticClass: \"form-control\",\n                        on: {\n                          change: function($event) {\n                            var $$selectedVal = Array.prototype.filter\n                              .call($event.target.options, function(o) {\n                                return o.selected\n                              })\n                              .map(function(o) {\n                                var val = \"_value\" in o ? o._value : o.value\n                                return val\n                              })\n                            _vm.Question_typetag = $event.target.multiple\n                              ? $$selectedVal\n                              : $$selectedVal[0]\n                          }\n                        }\n                      },\n                      _vm._l(_vm.questionopts, function(questionopt) {\n                        return _c(\n                          \"option\",\n                          { domProps: { value: questionopt.type } },\n                          [_vm._v(_vm._s(questionopt.type))]\n                        )\n                      }),\n                      0\n                    )\n                  ]),\n                  _c(\"div\", { staticClass: \"col-md-2\" }, [\n                    _c(\"label\", { attrs: { for: \"Markstaginput\" } }, [\n                      _vm._v(\"Marks\")\n                    ]),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.Markstag,\n                          expression: \"Markstag\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: {\n                        type: \"number\",\n                        id: \"Markstaginput\",\n                        placeholder: \"Marks\"\n                      },\n                      domProps: { value: _vm.Markstag },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.Markstag = $event.target.value\n                        }\n                      }\n                    })\n                  ])\n                ]),\n                this.isEdit == false\n                  ? _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-success btn-block mt-3\",\n                        attrs: { type: \"submit\" }\n                      },\n                      [_vm._v(\"\\n            Submit\\n          \")]\n                    )\n                  : _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-primary btn-block mt-3\",\n                        attrs: { type: \"button\" },\n                        on: {\n                          click: function($event) {\n                            return _vm.updateTask(_vm.id)\n                          }\n                        }\n                      },\n                      [_vm._v(\"\\n            Update\\n          \")]\n                    )\n              ]\n            ),\n            _c(\n              \"table\",\n              { staticClass: \"table striped\" },\n              [\n                _vm._m(0),\n                _vm._l(_vm.reversedTodos, function(todo, index) {\n                  return _c(\n                    \"tr\",\n                    {\n                      attrs: {\n                        id: todo.id,\n                        Level: todo.Level,\n                        Year: todo.Year,\n                        Question: todo.Question,\n                        Answer: todo.Answer,\n                        Topic: todo.Topic,\n                        Sub_topic: todo.Sub_topic,\n                        Question_type: todo.Question_type,\n                        arks: todo.Marks,\n                        Question_number: todo.Question_number,\n                        Part: todo.Part,\n                        Sub_part: todo.Sub_part\n                      }\n                    },\n                    [\n                      _c(\"td\", { staticClass: \"text-left\" }, [\n                        _vm._v(_vm._s(index + 1))\n                      ]),\n                      _c(\"td\", { staticClass: \"text-left\" }, [\n                        _vm._v(_vm._s(todo.id))\n                      ]),\n                      _c(\"td\", { staticClass: \"text-left\" }, [\n                        _vm._v(_vm._s(todo.Level))\n                      ]),\n                      _c(\"td\", { staticClass: \"text-left\" }, [\n                        _vm._v(_vm._s(todo.Year))\n                      ]),\n                      _c(\"td\", { staticClass: \"text-left\" }, [\n                        _vm._v(_vm._s(todo.Question_number))\n                      ]),\n                      _c(\"td\", { staticClass: \"text-left\" }, [\n                        _vm._v(_vm._s(todo.Part))\n                      ]),\n                      _c(\"td\", { staticClass: \"text-left\" }, [\n                        _vm._v(_vm._s(todo.Sub_part))\n                      ]),\n                      _c(\"td\", { staticClass: \"text-left\" }, [\n                        _vm._v(_vm._s(todo.Question))\n                      ]),\n                      _c(\"td\", { staticClass: \"text-left\" }, [\n                        _vm._v(_vm._s(todo.Answer))\n                      ]),\n                      _c(\"td\", { staticClass: \"text-left\" }, [\n                        _vm._v(_vm._s(todo.Topic))\n                      ]),\n                      _c(\"td\", { staticClass: \"text-left\" }, [\n                        _vm._v(_vm._s(todo.Sub_topic))\n                      ]),\n                      _c(\"td\", { staticClass: \"text-left\" }, [\n                        _vm._v(_vm._s(todo.Question_type))\n                      ]),\n                      _c(\"td\", { staticClass: \"text-left\" }, [\n                        _vm._v(_vm._s(todo.Marks))\n                      ]),\n                      _c(\"td\", { staticClass: \"text-right\" }, [\n                        _c(\n                          \"button\",\n                          {\n                            staticClass: \"btn btn-info\",\n                            on: {\n                              click: function($event) {\n                                return _vm.editTask(\n                                  todo.id,\n                                  todo.Level,\n                                  todo.Year,\n                                  todo.Question,\n                                  todo.Answer,\n                                  todo.Topic,\n                                  todo.Sub_topic,\n                                  todo.Question_type,\n                                  todo.Marks,\n                                  todo.Question_number,\n                                  todo.Part,\n                                  todo.Sub_part\n                                )\n                              }\n                            }\n                          },\n                          [_vm._v(\"Edit\")]\n                        ),\n                        _c(\n                          \"button\",\n                          {\n                            staticClass: \"btn btn-danger\",\n                            on: {\n                              click: function($event) {\n                                return _vm.deleteTask(todo.id)\n                              }\n                            }\n                          },\n                          [_vm._v(\"Delete\")]\n                        )\n                      ])\n                    ]\n                  )\n                })\n              ],\n              2\n            )\n          ])\n        ])\n      ]\n    )\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"thead\", { staticClass: \"thead-dark\" }, [\n      _c(\"tr\", [\n        _c(\"th\", [_vm._v(\"#\")]),\n        _c(\"th\", [_vm._v(\"id\")]),\n        _c(\"th\", [_vm._v(\"Level\")]),\n        _c(\"th\", [_vm._v(\"Year\")]),\n        _c(\"th\", [_vm._v(\"Question number\")]),\n        _c(\"th\", [_vm._v(\"Part\")]),\n        _c(\"th\", [_vm._v(\"Sub_part\")]),\n        _c(\"th\", [_vm._v(\"Question\")]),\n        _c(\"th\", [_vm._v(\"Answer\")]),\n        _c(\"th\", [_vm._v(\"Topic\")]),\n        _c(\"th\", [_vm._v(\"Sub topic\")]),\n        _c(\"th\", [_vm._v(\"Question type\")]),\n        _c(\"th\", [_vm._v(\"Marks\")]),\n        _c(\"th\")\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}