{"remainingRequest":"/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/src/components/List.vue?vue&type=style&index=0&id=264bddce&scoped=true&lang=css&","dependencies":[{"path":"/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/src/components/List.vue","mtime":1564582103785},{"path":"/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shanegibney/MEVN-Physics-Papers-Analysis/physicspaperanalysis/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nh3 {\n  margin: 40px 0 0;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\n\na {\n  color: #42b983;\n}\n\nth {\n  text-align: center;\n}\n\ntd,\ntr {\n  text-align: center;\n}\n\nbutton {\n  width: 100px;\n  align: center;\n}\n",{"version":3,"sources":["List.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsTA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"List.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div class=\"hello\">\n  <div id=\"todo-list-example\" class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-12 mx-auto\">\n        <h1 class=\"text-center\">Analysis</h1>\n        <form v-on:submit.prevent=\"addNewTask\">\n          <!-- <form v-on:submit=\"addNewTask\"> -->\n          <div class=\"row\">\n            <div class=\"col-md-1\">\n              <label for=\"tasknameinput\">Level</label>\n              <select v-model=\"Levelname\" class=\"form-control\">\n                <option v-for=\" opt in opts\" v-bind:value=\"opt.level\">{{opt.level}}</option>\n              </select>\n            </div>\n            <div class=\"col-md-2\">\n              <label for=\"Yearnameinput\">Years</label>\n              <input v-model=\"Yearname\" type=\"number\" id=\"Yearnameinput\" class=\"form-control\" placeholder=\"Add New Year\">\n            </div>\n            <div class=\"col-md-2\">\n              <label for=\"Questionnameinput\">Question</label>\n              <input v-model=\"Questionname\" type=\"text\" id=\"Questionnameinput\" class=\"form-control\" placeholder=\"Add New Question\">\n            </div>\n            <div class=\"col-md-2\">\n              <label for=\"Answernameinput\">Answer</label>\n              <input v-model=\"Answername\" type=\"text\" id=\"Answernameinput\" class=\"form-control\" placeholder=\"Add New Answer\">\n            </div>\n            <div class=\"col-md-2\">\n              <label for=\"Topicname\">Topic</label>\n              <select v-model=\"Topicname\" @change=\"selectDrink\" id=\"Topicname\" class=\"form-control\">\n                <option v-for=\"(drink,index) in drinks\" :value=\"index\">{{ drink.label }}</option>\n              </select>\n            </div>\n            <!-- <div class=\"col-md-2\">\n              <label for=\"Sub_topicname\">sub-topic</label>\n              <select v-model=\"Sub_topicname\" id=\"Sub_topicname\" class=\"form-control\">\n                <option v-for=\"option in drinks[selectedDrink].options\" v-if=\"selectedDrink != -1\">{{ option }}</option>\n              </select>\n            </div> -->\n            <div class=\"col-md-1\">\n              <label for=\"Question_typenameinput\">Question type</label>\n              <select v-model=\"Question_typename\" class=\"form-control\">\n                <option v-for=\"questionopt in questionopts\" v-bind:value=\"questionopt.type\">{{questionopt.type}}</option>\n              </select>\n            </div>\n            <div class=\"col-md-2\">\n              <label for=\"Marksnameinput\">Marks</label>\n              <input v-model=\"Marksname\" type=\"number\" id=\"Marksnameinput\" class=\"form-control\" placeholder=\"Marks\">\n            </div>\n            <div class=\"col-md-2\">\n              <label for=\"Question_numbernameinput\">Question no.</label>\n              <input v-model=\"Question_numbername\" type=\"number\" id=\"Question_numbernameinput\" class=\"form-control\" placeholder=\"Question no.\">\n            </div>\n          </div>\n          <button v-if=\"this.isEdit==false\" type=\"submit\" class=\"btn btn-success btn-block mt-3\">\n            Submit\n          </button>\n          <button v-else v-on:click=\"updateTask(id)\" type=\"button\" class=\"btn btn-primary btn-block mt-3\">\n            Update\n          </button>\n        </form>\n\n        <table class=\"table striped\">\n          <thead class=\"thead-dark\">\n            <tr>\n              <th>#</th>\n              <th>id</th>\n              <th>Level</th>\n              <th>Year</th>\n              <th>Question</th>\n              <th>Answer</th>\n              <th>Topic</th>\n              <th>Sub topic</th>\n              <th>Question type</th>\n              <th>Marks</th>\n              <th>Question number</th>\n              <th>Part</th>\n              <th>Sub_part</th>\n            </tr>\n          </thead>\n          <tr v-for=\"(todo,index) in reversedTodos\" v-bind:id=\"todo.id\" v-bind:Level=\"todo.Level\" v-bind:Year=\"todo.Year\" v-bind:Question=\"todo.Question\" v-bind:Answer=\"todo.Answer\" v-bind:Topic=\"todo.Topic\" v-bind:Sub_topic=\"todo.Sub_topic\"\n            v-bind:Question_type=\"todo.Question_type\" v-bind:arks=\"todo.Marks\" v-bind:Question_number=\"todo.Question_number\" v-bind:Part=\"todo.Part\" v-bind:Sub_part=\"todo.Sub_part\">\n            <td class=\"text-left\">{{index+1}}</td>\n            <td class=\"text-left\">{{todo.id}}</td>\n            <td class=\"text-left\">{{todo.Level}}</td>\n            <td class=\"text-left\">{{todo.Year}}</td>\n            <td class=\"text-left\">{{todo.Question}}</td>\n            <td class=\"text-left\">{{todo.Answer}}</td>\n            <td class=\"text-left\">{{todo.Topic}}</td>\n            <td class=\"text-left\">{{todo.Sub_topic}}</td>\n            <td class=\"text-left\">{{todo.Question_type}}</td>\n            <td class=\"text-left\">{{todo.Marks}}</td>\n            <td class=\"text-left\">{{todo.Question_number}}</td>\n            <td class=\"text-left\">{{todo.Part}}</td>\n            <td class=\"text-left\">{{todo.Sub_part}}</td>\n            <td class=\"text-right\">\n              <button class=\"btn btn-info\" v-on:click=\"editTask(todo.id, todo.Level, todo.Year, todo.Question, todo.Answer, todo.Topic, todo.Sub_topic,todo.Question_type, todo.Marks, todo.Question_number, todo.Part, todo.Sub_part)\">Edit</button>\n              <button class=\"btn btn-danger\" v-on:click=\"deleteTask(todo.id)\">Delete</button>\n            </td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  </div>\n</div>\n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n  name: 'List',\n  data() {\n    return {\n      drinks: [{\n          label: \"Beer\",\n          options: [\"Sam Adams\", \"Anchor Steam\", \"St. Arnold\"]\n        },\n        {\n          label: \"Soda\",\n          options: [\"Pepsi\", \"Coke\", \"RC\"]\n        },\n        {\n          label: \"Coffee\",\n          options: [\"Starbucks\", \"Dunkin Donuts\", \"Gross Hotel Room\"]\n        }\n      ],\n      selectLevels: ['Higher', 'Ordinary'],\n      selected: 'Higher',\n      // options: [\"Higher\", \"Ordinary\"],\n      selectedDrink: -1,\n      selectedOption: '',\n      opts: [{\n        level: 'Higher'\n      }, {\n        level: 'Ordinary'\n      }],\n      questionopts: [{\n        type: 'Theory'\n      }, {\n        type: 'Substitution'\n      }, {\n        type: 'Historic'\n      }, {\n        type: 'Experiment'\n      }, {\n        type: 'Definition'\n      }],\n      selected: '',\n      todos: [],\n      id: '',\n      Yearname: '',\n      Levelname: 'Higher',\n      Questionname: '',\n      Answername: '',\n      Topicname: '',\n      Sub_topicname: '',\n      Question_typename: '',\n      Marksname: null,\n      Question_numbername: null,\n      Partname: '',\n      Sub_partname: '',\n      isEdit: false\n    }\n  },\n  mounted() {\n    this.getTasks()\n    //this.sortDynamicDropDownMenu()\n  },\n  methods: {\n    selectDrink: function() {\n      this.selectedOption = '';\n    },\n    sortDynamicDropDownMenu() {\n      //console.log(\"qwertyui\")\n      // console.log(\"hello we are result.data - this.todos[0].task_name; \" + this.todos[0].task_name )\n      for (var i = 0; i < this.todos.length; i++) {\n        // console.log(this.todos[i].task_name);\n      }\n    },\n    // lastTask() {\n    //   axios.get(\"/api/lastTask\").then(\n    //     result => {\n    //       // this.todos = result.data\n    //       console.log(result.data);\n    //     },\n    //     error => {\n    //       console.error(error)\n    //     }\n    //   )\n    // },\n    getTasks() {\n      axios.get(\"/api/tasks\").then(\n        result => {\n          console.log(result.data)\n          this.todos = result.data\n        },\n        error => {\n          console.error(error)\n        }\n      )\n    },\n    addNewTask() {\n      console.log(\"this.Questionname: \" + this.Questionname);\n      axios.post(\"/api/task\", {\n          Level: this.Levelname,\n          Year: this.Yearname,\n          Question: this.Questionname,\n          Answer: this.Answername,\n          Topic: this.Topicname,\n          Sub_topic: this.Sub_topicname,\n          Question_type: this.Question_typename,\n          Marks: this.Marksname,\n          Question_number: this.Question_numbername,\n          Part: this.Partname,\n          Sub_part: this.Sub_partname\n        })\n        .then((res) => {\n          // this.Levelname = 'Higher'\n          // this.Yearname = ''\n          //this are always different and so should be cleared\n          this.Questionname = ''\n          this.Answername = ''\n          // this.Topicname = ''\n          // this.Sub_partname = ''\n          // this.Question_typename = ''\n          // this.Marksname = 0\n          // this.Question_numbername = 0\n          // this.Partname = ''\n          this.Sub_part = ''\n          this.getTasks()\n        }).catch((err) => {\n          console.log(error)\n        })\n    },\n    editTask(id, edit_Level, edit_Year, edit_Question, edit_Answer, edit_Topic, edit_Sub_topic, edit_Question_type, edit_Marks, edit_Question_number, edit_Part, edit_Sub_part) {\n      this.id = id\n      this.Levelname = edit_Level\n      this.Yearname = edit_Year\n      this.Questionname = edit_Question\n      this.Answername = edit_Answer\n      this.Topicname = edit_Topic\n      this.Sub_partname = edit_Sub_topic\n      this.Question_typename = edit_Question_type\n      this.Marksname = edit_Marks\n      this.Question_numbername = edit_Question_number\n      this.Partname = edit_Part\n      this.Sub_partname = edit_Sub_part\n      this.isEdit = true\n    },\n    updateTask(id) {\n      // axios.put(`/api/task/${this.id}`, {\n      axios.put('/api/task/' + id, {\n          Level: this.Levelname,\n          Year: this.Yearname,\n          Question: this.Questionname,\n          Answer: this.Answername,\n          Topic: this.Topicname,\n          Sub_part: this.Sub_partname,\n          Question_type: this.Question_typename,\n          Marks: this.Marksname,\n          Question_number: this.Question_numbername,\n          Part: this.Partname,\n          Sub_part: this.Sub_partname\n        })\n        .then((res) => {\n          this.Levelname = 'Higher'\n          this.Yearname = ''\n          this.Questionname = ''\n          this.Answername = ''\n          this.Topicname = ''\n          this.Sub_topicname = ''\n          this.Question_typename = ''\n          this.Marksname = null\n          this.Question_numbername = null\n          this.Partname = ''\n          this.Sub_partname = ''\n          this.isEdit = false\n          this.getTasks()\n          console.log(res)\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    },\n    deleteTask(id) {\n      // axios.delete('/api/task/${id}')\n      axios.delete('/api/task/' + id)\n        .then((res) => {\n          console.log(\"delete id: \" + id);\n          this.Levelname = ''\n          this.getTasks()\n          console.log(\"The delete task...\");\n          console.log(res)\n          console.log(\"....\");\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  },\n  computed: {\n    reversedTodos() {\n      return this.todos.slice().reverse()\n    }\n  },\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\n\na {\n  color: #42b983;\n}\n\nth {\n  text-align: center;\n}\n\ntd,\ntr {\n  text-align: center;\n}\n\nbutton {\n  width: 100px;\n  align: center;\n}\n</style>\n"]}]}